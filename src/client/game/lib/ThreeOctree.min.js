/*!
 *
 * threeoctree.js (r56) / https://github.com/collinhover/threeoctree
 * (sparse) dynamic 3D spatial representation structure for fast searches.
 *
 * @author Collin Hover / http://collinhover.com/
 * based on Dynamic Octree by Piko3D @ http://www.piko3d.com/ and Octree by Marek Pawlowski @ pawlowski.it
 *
 */
(function(d){function b(e){return !isNaN(e)&&isFinite(e)}function a(e){return Object.prototype.toString.call(e)==="[object Array]"}function c(e){return e?(a(e)!==true?[e]:e):[]}d.Octree=function(e){e=e||{};e.tree=this;this.nodeCount=0;this.INDEX_INSIDE_CROSS=-1;this.INDEX_OUTSIDE_OFFSET=2;this.INDEX_OUTSIDE_POS_X=b(e.INDEX_OUTSIDE_POS_X)?e.INDEX_OUTSIDE_POS_X:0;this.INDEX_OUTSIDE_NEG_X=b(e.INDEX_OUTSIDE_NEG_X)?e.INDEX_OUTSIDE_NEG_X:1;this.INDEX_OUTSIDE_POS_Y=b(e.INDEX_OUTSIDE_POS_Y)?e.INDEX_OUTSIDE_POS_Y:2;this.INDEX_OUTSIDE_NEG_Y=b(e.INDEX_OUTSIDE_NEG_Y)?e.INDEX_OUTSIDE_NEG_Y:3;this.INDEX_OUTSIDE_POS_Z=b(e.INDEX_OUTSIDE_POS_Z)?e.INDEX_OUTSIDE_POS_Z:4;this.INDEX_OUTSIDE_NEG_Z=b(e.INDEX_OUTSIDE_NEG_Z)?e.INDEX_OUTSIDE_NEG_Z:5;this.INDEX_OUTSIDE_MAP=[];this.INDEX_OUTSIDE_MAP[this.INDEX_OUTSIDE_POS_X]={index:this.INDEX_OUTSIDE_POS_X,count:0,x:1,y:0,z:0};this.INDEX_OUTSIDE_MAP[this.INDEX_OUTSIDE_NEG_X]={index:this.INDEX_OUTSIDE_NEG_X,count:0,x:-1,y:0,z:0};this.INDEX_OUTSIDE_MAP[this.INDEX_OUTSIDE_POS_Y]={index:this.INDEX_OUTSIDE_POS_Y,count:0,x:0,y:1,z:0};this.INDEX_OUTSIDE_MAP[this.INDEX_OUTSIDE_NEG_Y]={index:this.INDEX_OUTSIDE_NEG_Y,count:0,x:0,y:-1,z:0};this.INDEX_OUTSIDE_MAP[this.INDEX_OUTSIDE_POS_Z]={index:this.INDEX_OUTSIDE_POS_Z,count:0,x:0,y:0,z:1};this.INDEX_OUTSIDE_MAP[this.INDEX_OUTSIDE_NEG_Z]={index:this.INDEX_OUTSIDE_NEG_Z,count:0,x:0,y:0,z:-1};this.FLAG_POS_X=1<<(this.INDEX_OUTSIDE_POS_X+1);this.FLAG_NEG_X=1<<(this.INDEX_OUTSIDE_NEG_X+1);this.FLAG_POS_Y=1<<(this.INDEX_OUTSIDE_POS_Y+1);this.FLAG_NEG_Y=1<<(this.INDEX_OUTSIDE_NEG_Y+1);this.FLAG_POS_Z=1<<(this.INDEX_OUTSIDE_POS_Z+1);this.FLAG_NEG_Z=1<<(this.INDEX_OUTSIDE_NEG_Z+1);this.utilVec31Search=new d.Vector3();this.utilVec32Search=new d.Vector3();this.scene=e.scene;this.objects=[];this.objectsData=[];this.depthMax=b(e.depthMax)?e.depthMax:-1;this.objectsThreshold=b(e.objectsThreshold)?e.objectsThreshold:8;this.overlapPct=b(e.overlapPct)?e.overlapPct:0.15;this.root=e.root instanceof d.OctreeNode?e.root:new d.OctreeNode(e)};d.Octree.prototype={setRoot:function(e){if(e instanceof d.OctreeNode){this.root=e;this.root.updateProperties()}},add:function(k,f){var m,g,j,n,e,h;if(k instanceof d.OctreeObjectData){k=k.object}j=this.objects.indexOf(k);if(j===-1){this.objects.push(k);this.updateObject(k);if(f===true){n=k.geometry;e=n.faces;for(m=0,g=e.length;m<g;m++){this.addObjectData(k,e[m])}}else{this.addObjectData(k)}}},addObjectData:function(f,g){var e=new d.OctreeObjectData(f,g);this.objectsData.push(e);this.root.addObject(e)},remove:function(h){var j,e,g=h,f,k;if(h instanceof d.OctreeObjectData){h=h.object}f=this.objects.indexOf(h);if(f!==-1){this.objects.splice(f,1);k=this.root.removeObject(g);for(j=0,e=k.length;j<e;j++){g=k[j];f=this.objectsData.indexOf(g);if(f!==-1){this.objectsData.splice(f,1)}}}},extend:function(g){var j,f,e,h;if(g instanceof d.Octree){e=g.objectsData;for(j=0,f=e.length;j<f;j++){h=e[j];this.add(h,h.usesFaces())}}},update:function(){var j,e,m,g,f,k,n,h=[];for(j=0,e=this.objects.length;j<e;j++){g=this.objects[j];this.updateObject(g)}for(j=0,e=this.objectsData.length;j<e;j++){f=this.objectsData[j];m=f.node;f.update();if(m instanceof d.OctreeNode&&!f.positionLast.equals(f.position)){n=f.indexOctant;k=m.getOctantIndex(f);if(k!==n){h.push(f)}}}for(j=0,e=h.length;j<e;j++){f=h[j];f.node.removeObject(f);this.root.addObject(f)}},search:function(n,q,p,s){var m,h,g,u,t,j,k,f,e,r,o;u=[].concat(this.root.objects);if(b(q)!==true){q=Number.MAX_VALUE}if(s instanceof d.Vector3){s=this.utilVec31Search.copy(s).normalize();o=this.utilVec32Search.set(1,1,1).divide(s)}for(m=0,h=this.root.nodesIndices.length;m<h;m++){g=this.root.nodesByIndex[this.root.nodesIndices[m]];u=g.search(n,q,u,s,o)}if(p===true){k=[];e=[];for(m=0,h=u.length;m<h;m++){t=u[m];j=t.object;r=e.indexOf(j);if(r===-1){f={object:j,faces:[]};k.push(f);e.push(j)}else{f=k[r]}if(typeof t.faces!=="undefined"){f.faces.push(t.faces)}}}else{k=u}return k},updateObject:function(g){var h,e,k=[g],j,f;j=g.parent;while(j){k.push(j);j=j.parent}for(h=0,e=k.length;h<e;h++){j=k[h];if(j.matrixWorldNeedsUpdate===true){f=j}}if(typeof f!=="undefined"){f.updateMatrixWorld()}},getDepthEnd:function(){return this.root.getDepthEnd()},getNodeCountEnd:function(){return this.root.getNodeCountEnd()},getObjectCountEnd:function(){return this.root.getObjectCountEnd()},toConsole:function(){this.root.toConsole()}};d.OctreeObjectData=function(e,f){this.utilVec31FaceBounds=new d.Vector3();this.object=e;this.faces=f;this.radius=0;this.position=new d.Vector3();if(this.object instanceof d.Object3D){this.update()}this.positionLast=this.position.clone()};d.OctreeObjectData.prototype={update:function(){if(this.usesFaces()){this.radius=this.getFaceBoundingRadius(this.object,this.faces);this.position.copy(this.faces.centroid).applyMatrix4(this.object.matrixWorld)}else{this.radius=this.object.geometry instanceof d.Geometry?this.object.geometry.boundingSphere.radius:this.object.boundRadius;this.position.getPositionFromMatrix(this.object.matrixWorld)}this.radius=this.radius*Math.max(this.object.scale.x,this.object.scale.y,this.object.scale.z)},getFaceBoundingRadius:function(g,k){var n=g instanceof d.Mesh?g.geometry:g,j=n.vertices,e=k.centroid,o=j[k.a],m=j[k.b],l=j[k.c],i,f=this.utilVec31FaceBounds,h;if(k instanceof d.Face4){i=j[k.d];e.addVectors(o,m).add(l).add(i).divideScalar(4);h=Math.max(f.subVectors(e,o).length(),f.subVectors(e,m).length(),f.subVectors(e,l).length(),f.subVectors(e,i).length())}else{e.addVectors(o,m).add(l).divideScalar(3);h=Math.max(f.subVectors(e,o).length(),f.subVectors(e,m).length(),f.subVectors(e,l).length())}return h},usesFaces:function(){return this.faces instanceof d.Face3||this.faces instanceof d.Face4}};d.OctreeNode=function(e){this.utilVec31Branch=new d.Vector3();this.utilVec31Expand=new d.Vector3();this.utilVec31Ray=new d.Vector3();e=e||{};if(e.tree instanceof d.Octree){this.tree=e.tree}else{if(e.parent instanceof d.OctreeNode!==true){e.root=this;this.tree=new d.Octree(e)}}this.id=this.tree.nodeCount++;this.position=e.position instanceof d.Vector3?e.position:new d.Vector3();this.radius=b(e.radius)&&e.radius>0?e.radius:1;this.indexOctant=e.indexOctant;this.depth=0;this.reset();this.setParent(e.parent);this.overlap=this.radius*this.tree.overlapPct;this.radiusOverlap=this.radius+this.overlap;this.left=this.position.x-this.radiusOverlap;this.right=this.position.x+this.radiusOverlap;this.bottom=this.position.y-this.radiusOverlap;this.top=this.position.y+this.radiusOverlap;this.back=this.position.z-this.radiusOverlap;this.front=this.position.z+this.radiusOverlap;if(this.tree.scene){this.visual=new d.Mesh(new d.CubeGeometry(this.radiusOverlap*2,this.radiusOverlap*2,this.radiusOverlap*2),new d.MeshBasicMaterial({color:16711680,wireframe:true,wireframeLinewidth:1}));this.visual.position.copy(this.position);this.tree.scene.add(this.visual)}};d.OctreeNode.prototype={setParent:function(e){if(e!==this&&this.parent!==e){this.parent=e;this.updateProperties()}},updateProperties:function(){var f,e;if(this.parent instanceof d.OctreeNode){this.tree=this.parent.tree;this.depth=this.parent.depth+1}else{this.depth=0}for(f=0,e=this.nodesIndices.length;f<e;f++){this.nodesByIndex[this.nodesIndices[f]].updateProperties()}},reset:function(f,k){var g,e,h,j=this.nodesIndices||[],m=this.nodesByIndex;this.objects=[];this.nodesIndices=[];this.nodesByIndex={};for(g=0,e=j.length;g<e;g++){h=m[j[g]];h.setParent(undefined);if(f===true){h.reset(f,k)}}if(k===true&&this.visual&&this.visual.parent){this.visual.parent.remove(this.visual)}},addNode:function(f,e){e=f.indexOctant=b(e)?e:b(f.indexOctant)?f.indexOctant:this.getOctantIndex(f);if(this.nodesIndices.indexOf(e)===-1){this.nodesIndices.push(e)}this.nodesByIndex[e]=f;if(f.parent!==this){f.setParent(this)}},removeNode:function(f){var g=-1,e,h;if(f instanceof d.OctreeNode&&this.nodesByIndex[f.indexOctant]===f){h=f;g=h.indexOctant}else{if(b(f)){g=f}else{for(e in this.nodesByIndex){h=this.nodesByIndex[e];if(h===f){g=e;break}}}}if(g!==-1){e=this.nodesIndices.indexOf(g);this.nodesIndices.splice(e,1);h=h||this.nodesByIndex[g];delete this.nodesByIndex[g];if(h.parent===this){h.setParent(undefined)}}},addObject:function(f){var e,g,h;g=this.getOctantIndex(f);if(g>-1&&this.nodesIndices.length>0){h=this.branch(g);h.addObject(f)}else{if(g<-1&&this.parent instanceof d.OctreeNode){this.parent.addObject(f)}else{e=this.objects.indexOf(f);if(e===-1){this.objects.push(f)}f.node=this;this.checkGrow()}}},addObjectWithoutCheck:function(h){var g,e,f;for(g=0,e=h.length;g<e;g++){f=h[g];this.objects.push(f);f.node=this}},removeObject:function(f){var g,e,h,j;j=this.removeObjectRecursive(f,{searchComplete:false,nodesRemovedFrom:[],objectsDataRemoved:[]});h=j.nodesRemovedFrom;if(h.length>0){for(g=0,e=h.length;g<e;g++){h[g].shrink()}}return j.objectsDataRemoved},removeObjectRecursive:function(h,n){var j,e,g=-1,f,m,k;if(h instanceof d.OctreeObjectData){g=this.objects.indexOf(h);if(g!==-1){this.objects.splice(g,1);h.node=undefined;n.objectsDataRemoved.push(h);n.searchComplete=k=true}}else{for(j=this.objects.length-1;j>=0;j--){f=this.objects[j];if(f.object===h){this.objects.splice(j,1);f.node=undefined;n.objectsDataRemoved.push(f);k=true;if(typeof f.faces==="undefined"){n.searchComplete=true;break}}}}if(k===true){n.nodesRemovedFrom.push(this)}if(n.searchComplete!==true){for(j=0,e=this.nodesIndices.length;j<e;j++){m=this.nodesByIndex[this.nodesIndices[j]];n=m.removeObjectRecursive(h,n);if(n.searchComplete===true){break}}}return n},checkGrow:function(){if(this.objects.length>this.tree.objectsThreshold&&this.tree.objectsThreshold>0){this.grow()}},grow:function(){var e,j,f=[],g=[],m=[],o=[],n=[],k,h;for(k=0,h=this.objects.length;k<h;k++){j=this.objects[k];e=this.getOctantIndex(j);if(e>-1){m.push(j);o.push(e)}else{if(e<-1){f.push(j);g.push(e)}else{n.push(j)}}}if(m.length>0){n=n.concat(this.split(m,o))}if(f.length>0){n=n.concat(this.expand(f,g))}this.objects=n;this.checkMerge()},split:function(n,f){var h,e,k,g,m,j;if(this.tree.depthMax<0||this.depth<this.tree.depthMax){n=n||this.objects;f=f||[];j=[];for(h=0,e=n.length;h<e;h++){g=n[h];k=b(f[h])?f[h]:this.getOctantIndex(g);if(k>-1){m=this.branch(k);m.addObject(g)}else{j.push(g)}}if(n===this.objects){this.objects=j}}else{j=this.objects}return j},branch:function(i){var j,h,f,g,k,e;if(this.nodesByIndex[i] instanceof d.OctreeNode){j=this.nodesByIndex[i]}else{f=(this.radiusOverlap)*0.5;h=f*this.tree.overlapPct;g=f-h;k=this.utilVec31Branch.set(i&1?g:-g,i&2?g:-g,i&4?g:-g);e=new d.Vector3().addVectors(this.position,k);j=new d.OctreeNode({tree:this.tree,parent:this,position:e,radius:f,indexOctant:i});this.addNode(j,i)}return j},expand:function(f,J){var F,E,N,H,K,g,s,w,o,y=this.tree.INDEX_OUTSIDE_MAP,u,B,z,x,m,j,D,C,A,I,G,r,q,p,e,k,L,h,v,n=this.utilVec31Expand,M,t;if(this.tree.depthMax<0||this.tree.root.getDepthEnd()<this.tree.depthMax){f=f||this.objects;J=J||[];H=[];K=[];for(F=0,E=y.length;F<E;F++){y[F].count=0}for(F=0,E=f.length;F<E;F++){N=f[F];g=b(J[F])?J[F]:this.getOctantIndex(N);if(g<-1){s=-g-this.tree.INDEX_OUTSIDE_OFFSET;if(s&this.tree.FLAG_POS_X){y[this.tree.INDEX_OUTSIDE_POS_X].count++}else{if(s&this.tree.FLAG_NEG_X){y[this.tree.INDEX_OUTSIDE_NEG_X].count++}}if(s&this.tree.FLAG_POS_Y){y[this.tree.INDEX_OUTSIDE_POS_Y].count++}else{if(s&this.tree.FLAG_NEG_Y){y[this.tree.INDEX_OUTSIDE_NEG_Y].count++}}if(s&this.tree.FLAG_POS_Z){y[this.tree.INDEX_OUTSIDE_POS_Z].count++}else{if(s&this.tree.FLAG_NEG_Z){y[this.tree.INDEX_OUTSIDE_NEG_Z].count++}}K.push(N)}else{H.push(N)}}if(K.length>0){u=y.slice(0);u.sort(function(l,i){return i.count-l.count});B=u[0];m=B.index|1;D=u[1];C=u[2];z=(D.index|1)!==m?D:C;j=z.index|1;D=u[2];C=u[3];A=u[4];I=D.index|1;G=C.index|1;x=I!==m&&I!==j?D:G!==m&&G!==j?C:A;r=B.x+z.x+x.x;q=B.y+z.y+x.y;p=B.z+z.z+x.z;g=this.getOctantIndexFromPosition(r,q,p);o=this.getOctantIndexFromPosition(-r,-q,-p);e=this.overlap;k=this.radius;h=this.tree.overlapPct>0?e/((0.5*this.tree.overlapPct)*(1+this.tree.overlapPct)):k*2;v=h*this.tree.overlapPct;L=(h+v)-(k+e);n.set(g&1?L:-L,g&2?L:-L,g&4?L:-L);M=new d.Vector3().addVectors(this.position,n);t=new d.OctreeNode({tree:this.tree,position:M,radius:h});t.addNode(this,o);this.tree.setRoot(t);for(F=0,E=K.length;F<E;F++){this.tree.root.addObject(K[F])}}if(f===this.objects){this.objects=H}}else{H=f}return H},shrink:function(){this.checkMerge();this.tree.root.checkContract()},checkMerge:function(){var e=this,f;while(e.parent instanceof d.OctreeNode&&e.getObjectCountEnd()<this.tree.objectsThreshold){f=e;e=e.parent}if(e!==this){e.merge(f)}},merge:function(g){var m,e,h,f,n;g=c(g);for(m=0,e=g.length;m<e;m++){n=g[m];this.addObjectWithoutCheck(n.getObjectsEnd());n.reset(true,true);this.removeNode(n.indexOctant,n)}this.checkMerge()},checkContract:function(){var j,g,m,k,f,e,h;if(this.nodesIndices.length>0){e=0;h=this.objects.length;for(j=0,g=this.nodesIndices.length;j<g;j++){m=this.nodesByIndex[this.nodesIndices[j]];k=m.getObjectCountEnd();h+=k;if(f instanceof d.OctreeNode===false||k>e){f=m;e=k}}h-=e;if(h<this.tree.objectsThreshold&&f instanceof d.OctreeNode){this.contract(f)}}},contract:function(h){var f,e,g;for(f=0,e=this.nodesIndices.length;f<e;f++){g=this.nodesByIndex[this.nodesIndices[f]];if(g!==h){h.addObjectWithoutCheck(g.getObjectsEnd());g.reset(true,true)}}h.addObjectWithoutCheck(this.objects);this.reset(false,true);this.tree.setRoot(h);h.checkContract()},getOctantIndex:function(v){var n,h,k,q,o=this.position,t=this.radiusOverlap,u=this.overlap,m,j,g,s,r,p,f,e=0;if(v instanceof d.OctreeObjectData){q=v.radius;k=v.position;v.positionLast.copy(k)}else{if(v instanceof d.OctreeNode){k=v.position;q=0}}m=k.x-o.x;j=k.y-o.y;g=k.z-o.z;s=Math.abs(m);r=Math.abs(j);p=Math.abs(g);f=Math.max(s,r,p);if(f+q>t){if(s+q>t){e=e^(m>0?this.tree.FLAG_POS_X:this.tree.FLAG_NEG_X)}if(r+q>t){e=e^(j>0?this.tree.FLAG_POS_Y:this.tree.FLAG_NEG_Y)}if(p+q>t){e=e^(g>0?this.tree.FLAG_POS_Z:this.tree.FLAG_NEG_Z)}v.indexOctant=-e-this.tree.INDEX_OUTSIDE_OFFSET;return v.indexOctant}if(m-q>-u){e=e|1}else{if(!(m+q<u)){v.indexOctant=this.tree.INDEX_INSIDE_CROSS;return v.indexOctant}}if(j-q>-u){e=e|2}else{if(!(j+q<u)){v.indexOctant=this.tree.INDEX_INSIDE_CROSS;return v.indexOctant}}if(g-q>-u){e=e|4}else{if(!(g+q<u)){v.indexOctant=this.tree.INDEX_INSIDE_CROSS;return v.indexOctant}}v.indexOctant=e;return v.indexOctant},getOctantIndexFromPosition:function(e,h,g){var f=0;if(e>0){f=f|1}if(h>0){f=f|2}if(g>0){f=f|4}return f},search:function(h,m,o,n,j){var g,f,e,k;if(n){k=this.intersectRay(h,n,m,j)}else{k=this.intersectSphere(h,m)}if(k===true){o=o.concat(this.objects);for(g=0,f=this.nodesIndices.length;g<f;g++){e=this.nodesByIndex[this.nodesIndices[g]];o=e.search(h,m,o,n)}}return o},intersectSphere:function(f,e){var j=e*e,i=f.x,h=f.y,g=f.z;if(i<this.left){j-=Math.pow(i-this.left,2)}else{if(i>this.right){j-=Math.pow(i-this.right,2)}}if(h<this.bottom){j-=Math.pow(h-this.bottom,2)}else{if(h>this.top){j-=Math.pow(h-this.top,2)}}if(g<this.back){j-=Math.pow(g-this.back,2)}else{if(g>this.front){j-=Math.pow(g-this.front,2)}}return j>=0},intersectRay:function(p,o,e,n){if(typeof n==="undefined"){n=this.utilVec31Ray.set(1,1,1).divide(o)}var m=(this.left-p.x)*n.x,l=(this.right-p.x)*n.x,j=(this.bottom-p.y)*n.y,i=(this.top-p.y)*n.y,h=(this.back-p.z)*n.z,g=(this.front-p.z)*n.z,k=Math.min(Math.min(Math.max(m,l),Math.max(j,i)),Math.max(h,g)),f;if(k<0){return false}f=Math.max(Math.max(Math.min(m,l),Math.min(j,i)),Math.min(h,g));if(f>k||f>e){return false}return true},getDepthEnd:function(h){var f,e,g;if(this.nodesIndices.length>0){for(f=0,e=this.nodesIndices.length;f<e;f++){g=this.nodesByIndex[this.nodesIndices[f]];h=g.getDepthEnd(h)}}else{h=!h||this.depth>h?this.depth:h}return h},getNodeCountEnd:function(){return this.tree.root.getNodeCountRecursive()+1},getNodeCountRecursive:function(){var f,e,g=this.nodesIndices.length;for(f=0,e=this.nodesIndices.length;f<e;f++){g+=this.nodesByIndex[this.nodesIndices[f]].getNodeCountRecursive()}return g},getObjectsEnd:function(h){var f,e,g;h=(h||[]).concat(this.objects);for(f=0,e=this.nodesIndices.length;f<e;f++){g=this.nodesByIndex[this.nodesIndices[f]];h=g.getObjectsEnd(h)}return h},getObjectCountEnd:function(){var f,e,g=this.objects.length;for(f=0,e=this.nodesIndices.length;f<e;f++){g+=this.nodesByIndex[this.nodesIndices[f]].getObjectCountEnd()}return g},getObjectCountStart:function(){var f=this.objects.length,e=this.parent;while(e instanceof d.OctreeNode){f+=e.objects.length;e=e.parent}return f},toConsole:function(h){var f,e,g,j="   ";h=typeof h==="string"?h:j;console.log((this.parent?h+" octree NODE > ":" octree ROOT > "),this," // id: ",this.id," // indexOctant: ",this.indexOctant," // position: ",this.position.x,this.position.y,this.position.z," // radius: ",this.radius," // depth: ",this.depth);console.log((this.parent?h+" ":" "),"+ objects ( ",this.objects.length," ) ",this.objects);console.log((this.parent?h+" ":" "),"+ children ( ",this.nodesIndices.length," )",this.nodesIndices,this.nodesByIndex);for(f=0,e=this.nodesIndices.length;f<e;f++){g=this.nodesByIndex[this.nodesIndices[f]];g.toConsole(h+j)}}};d.Raycaster.prototype.intersectOctreeObject=function(g,f){var i,j,h,e;if(g.object instanceof d.Object3D){j=g;g=j.object;e=j.faces;h=g.geometry.faces;if(e.length>0){g.geometry.faces=e}i=this.intersectObject(g,f);if(e.length>0){g.geometry.faces=h}}else{i=this.intersectObject(g,f)}return i};d.Raycaster.prototype.intersectOctreeObjects=function(j,f){var g,e,h=[];for(g=0,e=j.length;g<e;g++){h=h.concat(this.intersectOctreeObject(j[g],f))}return h}}(THREE));